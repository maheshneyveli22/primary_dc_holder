1) Earlier:
we configured the Cisco IOS router as a Certificate Server. We then used these certificates for authentication between two VPN peers.

2) Now:
 Local CA feature on the ASA. When this feature is enabled, the ASA is equipped with basic certificate authority functionality. 
 It can issue digital certificates, publish Certificate Revocation Lists (CRLs), and securely revoke issued certificates.
 
3) Prime Difference:
 a) Although the functionality is fairly similar to the Cisco IOS Certificate Server, it is not as granular and 
 one of the main differences is that the Cisco ASA Local CA provides only browser-based certificate enrolment. 
 This is not a disadvantage in the sense that one of the drivers for the Local CA support on the ASA was for WebVPN and SSL VPN connections. 
 In this sense therefore, the Local CA feature is just the right level of functionality.
 b) Now, unlike the Cisco IOS Certificate Server which gives us the option to create an RSA key pair to use for the Local CA, 
 the ASA does not give us that option. Instead, it generates an RSA key pair automatically when the Local CA is enabled. 
 This means we can go ahead and define the Local CA using the “crypto ca server” command.
 c) Notice that with the ASA, we do not specify a CA name like we did on the Cisco IOS router. 
 This implicitly tells you that you can have only one instance of the Local CA running on the ASA at a particular time.
 
4) Aim:
 The aim is to enable the Local CA support on the ASA and get the host to enroll with this CA.
 
5) Pre-requisite:
 As we had with the Cisco IOS Certificate Server, we need to ensure that our clocks are synchronised in which 
 case NTP may be useful. At this point, the clock on my ASA is correct.
 
6) (config)# show clock
00:07:24.655 UTC Tue Aug 2 2016

-> here time is correct

7) defining local ca:
crypto ca server

a) “lifetime” should be familiar and it also does the same thing as on the Cisco IOS Certificate Server 
(i.e. it allows us to configure the lifetimes of certificates and CRLs), 
b) “issuer-name” also does the same as it does on the Cisco IOS Certificate Server. 
c) Using the “keysize” option, we can specify the size of the keypair (i.e. the same as the ‘modulus‘ option when generating a 
keypair using the crypto key generate rsa)
This means that although the ASA will generate the keypair itself, we can specify the size to use.
d)Two options that may be unfamiliar are “smtp” and “otp“. Before users can enroll with the Local CA of the ASA, they must provide a username and a password. 
That password is a One-Time Password (OTP) generated by the Local CA and this OTP can be emailed to users (if you have a valid SMTP server on your network, for example).
 The “smtp” option therefore lets you configure the subject name of the email and also the sender address while the 
 ###
(config-ca-server)# smtp ?
crypto-ca-server mode commands/options:
  from-address  E-mail address to use in from field of E-mail's generated
  subject       Subject line field for E-mail's generated

 ###
e) “otp” option allows you specify how long the one-time password should be valid for.
#######

(config-ca-server)# otp ?
crypto-ca-server mode commands/options:
  expiration  Timeout in hours. Duration that an issued OTP will be valid for a
              user to enroll

####
although the OTP must be used, we do not have to send it via email; we can display it on the terminal and then 
send to the user which is the method we will be using. For now, let’s just configure basic settings.

8) configuring basic settings;
######
(config)# crypto ca server
(config-ca-server)#
(config-ca-server)# issue
(config-ca-server)# issuer-name cn=ASA-CA, o=Example Inc., c=UK
(config-ca-server)# subject-name-default o=Example Inc., c=UK
(config-ca-server)# lifet
(config-ca-server)# lifetime c
(config-ca-server)# lifetime ca
(config-ca-server)# lifetime ca-certificate 3650
(config-ca-server)# lifetime cer
(config-ca-server)# lifetime certificate 730
(config-ca-server)#
##########
9) We can then go ahead and enable our Local CA by issuing the “no shutdown” 

eg:
##########
(config-ca-server)# no shutdown

% Some server settings cannot be changed after CA certificate generation.
% Please enter a passphrase to protect the private key
% or press return to exit
Passphrase: ********

Re-enter passphrase: ********


Completed generation of the certificate and keypair...

Archiving certificate and keypair to storage... Complete
INFO:
Certificate Server enabled.
#################
Like the Cisco IOS Certificate Server, we also had to enter a passphrase to protect the private key. 
You will also notice the warning about some settings not being changeable after the CA has been enabled.

10) Looking at the above output, you will notice that it first generated a keypair and 
we can view this keypair:

#########
(config)# sh crypto key mypubkey rsa
Key pair was generated at: 04:18:55 UTC Jun 10 2015
 Key name: <Default-RSA-Key>
 Usage: General Purpose Key
 Modulus Size (bits): 1024
 Storage: config
 Key Data:

  30819f30 0d06092a 864886f7 0d010101 05000381 8d003081 89028181 00af38f6
  e067011d ccf2e4bf e6694af1 136e1731 ace1fb2b efd6bbe5 462e8c46 a2a73afe
  b4e17bf9 93231a87 97f72395 01880de8 2e323d09 b5206791 0000ec62 909526de
  f7ed92b5 e6098bc7 b29b9d5a 6f880271 26fb2806 59218362 cb2648ba 1bb03442
  010333b9 a1d3152f 6b51f895 0d016e7a f108e123 7046436f 61c7ea51 ff020301
  0001
Key pair was generated at: 04:34:38 UTC Jul 31 2015
 Key name: LOCAL-CA-SERVER
 Usage: General Purpose Key
 Modulus Size (bits): 1024
 Storage: config
 Key Data:

  30819f30 0d06092a 864886f7 0d010101 05000381 8d003081 89028181 00b7c8ae
  f5ad01c0 11f9395d c6868ee7 85f7e412 38ecad09 2bfcf369 4a7f9b51 0b4b2027
  00518e76 a4d3f1b6 9110c4b7 e02acf81 d0e0e3f8 8788a6eb 6a63031b 74180f65
  5ba35b08 6b03d01c 8df796a5 b715c244 38113ee0 cb3c3861 fb228fa7 324095d2
  d632e9d5 9eaec70d 2c555c67 b5a3fa5f 4d179386 ce0ad489 5a7fe927 a9020301
  0001
Key pair was generated at: 04:53:04 UTC Jul 31 2015
 Key name: test
 Usage: General Purpose Key
 Modulus Size (bits): 2048
 Storage: config
 Key Data:

  30820122 300d0609 2a864886 f70d0101 01050003 82010f00 3082010a 02820101
  00c78cae 4e9f43ac a57eeb97 586151ea 20df1794 9a0be55a 1bb27126 4e35b08a
  72450c28 4ca78378 d8b715f2 0f93a1cf 69f46ecd e0dd4ba4 e88dd641 283a976d
  e58eb117 63100d4e 4c1ca373 4d48f7e5 babb40b4 ee1a1764 1f23e6f5 d0aaf27d
  ce022906 866c9495 73a38efd d2044aff 801c63a7 c5586bfd b324d6b0 03b2c6c6
  4c80272b 36ccf4c7 a8416e36 c7fa1b2d 9590db5b 82851b6d 5c59dcf2 0e19c968
  0b9920fa 583a74ec 153f3d64 dcc41e73 9c7ae298 b086a663 e9d82e9c faee90f5
  f3664e31 c1a73968 4736c6ef 26b13d71 bee0a6b2 68beed89 ae17dea1 f0fcf6a5
  caab4c93 a80e8703 a313f9aa e4b67028 379d47c6 accf8f4c 62b3eb8c 64b5d782
  a7020301 0001
Key pair was generated at: 04:53:14 UTC Jul 31 2015
 Key name: testkey
 Usage: General Purpose Key
 Modulus Size (bits): 2048
 Storage: config
 Key Data:

  30820122 300d0609 2a864886 f70d0101 01050003 82010f00 3082010a 02820101
  00b5225f 523fa029 2d2e8567 c1aafc7a 80032626 4ee7fdb4 b7556de6 f3a06950
  fc85a8bc 0e3cad21 3827537c f8c69971 f94767cf 8d734857 7a87e9d0 2a8ed834
  1e9bd237 812684f9 cb377892 a0dd9e19 b62a1e12 741685c3 2381926e 00673802
  30fe38ab aa941ebe 15b3998f 51e63aff af4fe50b 1155da34 c0372dcd bb9399ac
  7367dd4e 92736352 332e9d75 58ace859 024a660a a7c1624d e58ea88b 93a50c1a
  6be95fad db413f55 99e4f6d7 4a21dee6 f93337eb 2e2c22ab 9707a2f3 8648d760
  d8b6664d 881273d4 df641d37 9fae6315 caddb4df 3e0bb6de 42e91630 6a645e20
  2ceed019 ead5d6b9 61a05383 127cc6f1 5acae4b7 b35de707 c916bf17 af4f1985
  d3020301 0001
Key pair was generated at: 04:21:27 UTC Aug 5 2015
 Key name: ASDM_LAUNCHER
 Usage: General Purpose Key
 Modulus Size (bits): 2048
 Storage: config
 Key Data:

  30820122 300d0609 2a864886 f70d0101 01050003 82010f00 3082010a 02820101
  00d2d6ee 7d4885ff c1b8da52 12bd23c0 c7b5c00a 978ee63d 32c8c052 f01093f2
  8b59fcc0 d2cb52d5 5e275141 a9160992 4a685c0e 0f59fc38 571c5827 841602fc
  ff3d6af5 a697a90f be3e20db 8eedf82f 4f352929 4ad63608 26e2a4ae 6b52792b
  6afd35e2 d6d420d2 e0d29fdb b23e9023 c3703027 4140fe31 b7ddf7b8 3173d1af
  27ad557a 6e0219b1 6e7782d9 ec1553a7 91f3b722 30ae5b56 f9c73a05 acb1ea77
  457eb79a 53365b41 f06e5804 9ee8fdf8 e3953857 b71133c7 c95f03fd f212a9d3
  241243da 2e9348e9 57b3de21 f307fb5e e44708bb 2760de93 1f036008 948ba173
  e82d69eb 8b2f6430 e24fc32b 0bd4c6b0 9cbf505c e924fbb1 93004c72 22bf1c15
  c3020301 0001
Key pair was generated at: 05:26:59 UTC Feb 2 2016
 Key name: jj
 Usage: General Purpose Key
 Modulus Size (bits): 1024
 Storage: config
 Key Data:

  30819f30 0d06092a 864886f7 0d010101 05000381 8d003081 89028181 00ac3ea2
  a1e92c3e 51a1021f 141f6383 414552e8 7dd3eed1 393cd8fa 1b669126 c5fff183
  0c08ee16 cfff4588 2d3f79ad fc15d280 c69d931a ce6379ca 379c0919 49049ce7
  e0a79dc2 cfa7dc02 a4354b54 ae7f2788 f3ce54c2 11a14ae6 7f240a5f 87b6cfa8
  807a443f 017ef5da 29d7c83b bae9039c b4fc9479 c9de3fdd 2edec65f 75020301
  0001
Key pair was generated at: 22:41:09 UTC Feb 8 2016
 Key name: jagan
 Usage: General Purpose Key
 Modulus Size (bits): 1024
 Storage: config
 Key Data:

  30819f30 0d06092a 864886f7 0d010101 05000381 8d003081 89028181 0093ce3d
  a654db06 2d62e3d8 91d7d199 06cc845b 2b6dce57 4ce8a49d caf46f14 cd611401
  e730b49e b1f8eca0 cdf63b32 de4dd38f 21153fff fcc26a1e f79eeb39 7adcda98
  04d4981d 0a4a66eb 3a2aa7dd 18efce19 5417a096 9d44baaa 239e7172 95bece2b
  6023baa9 8e2d5491 edd81274 f63a41e1 dc1fd656 d8aa87a5 a8341f9d 93020301
  0001
Key pair was generated at: 02:56:17 UTC Feb 9 2016
 Key name: tls_proxy_key
 Usage: General Purpose Key
 Modulus Size (bits): 1024
 Storage: config
 Key Data:

  30819f30 0d06092a 864886f7 0d010101 05000381 8d003081 89028181 008a2893
  a697ec3a 25c9ec1f 27519d2d 465ae51a 811a3e93 36eb6d96 27ddd76d 7cb159a2
  12c35cae 953a2ed1 1d73892d 42e58938 b20d1062 a12e5314 63afcde3 2dd82ab0
  1a443262 3f4bc623 86fa6a9e 9c27ad21 7dc2b0d8 6fd8c4e8 82c89035 beb01946
  2489cb49 105d126a 888a8d95 f1cb398a b35d36e1 eb40d68a 3496ae24 0b020301
  0001
(config)#
##############

11) As you can see, it uses a default name of “LOCAL-CA-SERVER” for the RSA keypair. 
12) Now, let’s look at the Local CA settings using the “show crypto ca server” command
######
(config)# show crypto ca server

Certificate Server LOCAL-CA-SERVER:
    Status: enabled
    State: enabled
    Server's configuration is locked  (enter "shutdown" to unlock it)
    Issuer name: cn=ASA-CA, o=Example Inc., c=UK
    CA certificate fingerprint/thumbprint: (MD5)
        05dc92c2 154480c9 e359c597 afe12156
    CA certificate fingerprint/thumbprint: (SHA1)
        273607dd 08049d2d aeae5ef5 58144479 52c7cdf0
    Last certificate issued serial number: 0x1
    CA certificate expiration timer: 00:23:58 UTC Jul 31 2026
    CRL NextUpdate timer: 06:23:58 UTC Aug 2 2016
    Current primary storage dir: flash:/LOCAL-CA-SERVER/

    Auto-Rollover configured, overlap period 30 days
    Autorollover timer: 00:23:58 UTC Jul 1 2026
(config)#
####################
13) This output is similar to what we had on the Cisco IOS Certificate Server. We can also view the self-signed CA certificate generated as shown below; 
based on our configuration, the certificate is valid for 10 years.
#######
(config)# sh crypto ca certificates
CA Certificate
  Status: Available
  Certificate Serial Number: 01
  Certificate Usage: Signature
  Public Key Type: RSA (1024 bits)
  Signature Algorithm: SHA1 with RSA Encryption
  Issuer Name:
    cn=ASA-CA
    o=Example Inc.
    c=UK
  Subject Name:
    cn=ASA-CA
    o=Example Inc.
    c=UK
  Validity Date:
    start date: 00:23:58 UTC Aug 2 2016
    end   date: 00:23:58 UTC Jul 31 2026
  Storage: config
  Associated Trustpoints: LOCAL-CA-SERVER

###################

14) This completes the steps for configuring the Local CA on the ASA. However, before users can enroll, there are still some steps that we need to perform. 
The first is to enable the WebVPN service on the ASA (I enabled it on the “inside” interface because that is where the host is connected).
####
(config)# webvpn
(config-webvpn)# enable ?

webvpn mode commands/options:
Current available interface(s):
  Test     Name of interface GigabitEthernet0/4
  mgmt     Name of interface Management0/0
  outside  Name of interface GigabitEthernet0/0

configure mode commands/options:
  password  Configure password for the enable command
(config-webvpn)# enable Test
INFO: WebVPN and DTLS are enabled on 'Test'.
##################

15)Then, we need to configure users that can enroll with the Local CA. We do this by adding users to the Local CA user database.

##########
(config)# crypto ca server user-db ?

exec mode commands/options:
  add        Add a user to the user enrollment database
  allow      Allow enrollment for a user already in the user database
  email-otp  Send One Time Password to the user via e-mail
  remove     Remove a user from the user enrollment database
  show-otp   Show One Time Password
(config)# crypto ca server user-db add maelumal-ws01.partnet.cicso.com
#########

16) Adding a user to the Local CA user database is not enough; we still need to allow the user to enroll. It is at this point that the 
OTP for the user is generated.

(config)# crypto ca server user-db allow maelumal-ws01.partnet.cicso.com disp
(config)# crypto ca server user-db allow maelumal-ws01.partnet.cicso.com displ$
Username: maelumal-ws01.partnet.cicso.com
OTP: 18C63A1F02003FBB
28A4B1B0F235B55E
Enrollment Allowed Until: 00:39:25 UTC Fri Aug 5 2016
-->In the above output, I have chosen to display the OTP on the terminal rather than emailing it to the user. You will also notice that the user can enroll up till November 23, 2013 which is 72 hours from the time when that OTP was issued. 
This tells us that the default OTP expiration time is 72 hours (3 days).

17)Now the user can enroll with the Local CA. Remember we said that the Local CA on the ASA supports browser based enrollment. 
So I will open a web browser tab to https://ASA-IP-Address/+CSCOCA+/enroll.html or 
https://ASA-Hostname/+CSCOCA+/enroll.html. 
or
https://10.197.87.70:5055/+CSCOCA+/login.html
On the webpage displayed, I (or the user) will enter the username and OTP.
18) Hint: In case you have forgotten the OTP, you can display it again using the “crypto ca server user-db show-otp <username>” command.

19)
Depending on what browser the client is using, the client will be prompted to open or save the certificate.
Install the certificate. On a Windows OS, the Certificate Import Wizard will come up and you can accept the defaults. The only thing to 
note is that it will require you to enter a private key which is the same as the OTP.

Also, because the certificate was issued by the Local CA of the ASA, you may get a warning dialog similar to the one shown below because the 
client system cannot validate the certificate.

However, it gives us the thumbprint of the CA server which we can use to confirm the certificate validity.
 As you can see from the output below, the thumbprint matches.

After installing the certificate, we can verify that it has been installed in the web browser. If you are using Internet 
Explorer for example, navigate to Internet Options >     Content; under the ‘Certificates’ section, click on “Certificates”.

Notice from the output above that the username – “examplepc” – has been included as the common name (CN) of that certificate. You can also see 
that the certificate is valid for two years like we configured.
We can view the status of the user on the Local CA user database by issuing the “show crypto ca server user-db” command. This command will show the enrollment status of the user and also the validity of the user’s certificate if available.

One way to test this certificate is to create a WebVPN tunnel-group that uses certificates for authentication. Another simpler way will be to 
edit the default WebVPN tunnel-group. You can view the default tunnel group by issuing the command “show run all tunnel-group“.


You will then open a web connection to https://ASA-IP-Address/ (by default, this should redirect you to your SSL VPN page) and confirm that certificates are
 now being used for authentication rather than the usual username/password combination.
 
 
 20)
 INSTALL / TEST CERTIFICATE 

As you will appreciate there are a number of VPN methods and ways that you can use the previously created user certificate.

A quick way to test your certificate is to try and connect using WebVPN.

Here are the steps:

  1. Import the downloaded certificate into your web browsers certificate store.
  2. Change the ASA default WebVPN group to certificate based authentication.  

asa-skyn3t(config)# tunnel-group DefaultWEBVPNGroup webvpn-attributes
asa-skyn3t(config-tunnel-webvpn)# authentication certificate
asa-skyn3t(config-tunnel-webvpn)# exit

  3. Connect to WebVPN via https://<ASA> IP/HOSTNAME>
  4. Your browser will then ask you to choose a digital certificate to authenticate with. 
  
21) FIREWALL(config)# sh crypto ca server user-db allowed
FIREWALL(config)# sh crypto ca server user-db allowed
username: test
email:    <None>
dn:       <None>
allowed:  18:07:35 UTC Fri Aug 5 2016
notified: 1 times
enrollment status: Enrolled, Certificate valid until 18:07:52 UTC Thu Aug 2 2018
,
Renewal: Allowed








 